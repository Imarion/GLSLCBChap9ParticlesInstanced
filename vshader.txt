#version 430

layout (location = 0) in vec3  VertexPosition;
layout (location = 1) in vec3  VertexNormal;
layout (location = 2) in vec3  VertexTexCoord;
layout (location = 3) in vec3  VertexInitVel;  // Particle initial velocity
layout (location = 4) in float StartTime;      // Particle "birth" time

out vec3 Position;
out vec3 Normal;

uniform float Time;                          // Animation time
uniform vec3  Gravity = vec3(0.0,-0.05,0.0);
uniform float ParticleLifetime;              // Max particle lifetime

uniform mat4 ModelViewMatrix;
uniform mat3 NormalMatrix;
uniform mat4 ProjectionMatrix;
uniform mat4 MVP;

void main()
{
    // Work in camera coordinates
    Position = (ModelViewMatrix * vec4(VertexPosition,1.0)).xyz;
    Normal   = NormalMatrix * VertexNormal;
    vec3 v0  = NormalMatrix * VertexInitVel;

    if( Time > StartTime ) {
        float t = Time - StartTime;

        if( t < ParticleLifetime ) {
            Position += v0 * t + Gravity * t * t;
        }
    }

    // Draw at the current position
    gl_Position = ProjectionMatrix * vec4(Position, 1.0);
//    gl_Position = MVP * vec4(VertexPosition, 1.0);
}
